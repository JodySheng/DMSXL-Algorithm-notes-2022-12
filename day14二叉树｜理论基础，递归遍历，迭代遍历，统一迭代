https://programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%A7%8D%E7%B1%BB

种类：
满二叉树 节点数2的k次方-1 深度k （一定是完全二叉树）
完全二叉树：除了底层以外，都是满的，最后一层从左到右满到右
二叉搜索树：左边小于右边，对节点布局无要求
平衡二叉搜索树：左子树和右子树高度差不能大于1（map，set底层实现机制，插入查询logn，key都是有序的）

存储方式
链性存储：指针，左孩子右孩子，
线性存储：数组，2*i+1 左孩子， 2*i+2 右孩子

二叉树构造：

二叉树遍历：
二叉树主要有两种遍历方式：

深度优先遍历：先往深走，遇到叶子节点再往回走。
广度优先遍历：一层一层的去遍历。
这两种遍历是图论中最基本的两种遍历方式，后面在介绍图论的时候 还会介绍到。

那么从深度优先遍历和广度优先遍历进一步拓展，才有如下遍历方式：

深度优先遍历
前序遍历（递归法，迭代法）
中序遍历（递归法，迭代法）
后序遍历（递归法，迭代法）
广度优先遍历
层次遍历（迭代法）


二叉树定义：如何构造
在现场面试的时候 面试官可能要求手写代码，所以数据结构的定义以及简单逻辑的代码一定要锻炼白纸写出来。
class TreeNode: 
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
